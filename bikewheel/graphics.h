// Don't edit this file!  It's software-generated.
// See convert.py script instead.

#define PALETTE1  0
#define PALETTE4  1
#define PALETTE8  2
#define TRUECOLOR 3

#define NUM_LEDS 36

// /mnt/g/My Drive/bike_pov/ghost.gif --------------------------------------

const uint8_t PROGMEM palette00[][3] = {
  {   1,   1,   1 },
  {  21,  21,  21 },
  {   1,   1,   1 },
  {   1,   1,   1 },
  {   2,   2,   3 },
  {  14,  14,  14 },
  {   0,   0,   0 },
  {   8,  11,  11 },
  {   6,   6,   6 },
  {  17,  17,  17 },
  {   8,   8,   8 },
  {   0,   0,   0 },
  {  11,  11,  11 },
  {   0,   0,   0 },
  {  25,  25,  25 },
  {   0,   0,   0 } };

const uint8_t PROGMEM pixels00[] = {
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFD, 0XDD, 0XDD, 0XDD, 0XDD,
  0XDF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XDD, 0XDD, 0XDD, 0XDD,
  0XDD, 0XDD, 0XDF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XDD, 0XDD, 0XDD, 0X1E,
  0XEE, 0XEE, 0XEE, 0XED, 0XDF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFD, 0XDD, 0XDD, 0XDD, 0XD1, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XDD, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFD, 0XDD, 0XDD, 0X4E, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XDD,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFD, 0XDD, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XED, 0XDD, 0XDF, 0XFF, 0XFF, 0XFF, 0XDD, 0XCE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XE5, 0XDD, 0XDF, 0XFF, 0XDD,
  0XBE, 0XEE, 0XEE, 0X1D, 0XDE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XDF,
  0XFF, 0XDD, 0XEE, 0XEE, 0XEE, 0XBD, 0XDE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XED, 0XDF, 0XFD, 0XD1, 0XEE, 0XEE, 0XED, 0XD2,
  0XDA, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XDD, 0XFF, 0XFD, 0XEE, 0XEE, 0XEE,
  0XDD, 0XD3, 0XD8, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XDD, 0XDF, 0XFF, 0XDD, 0XEE,
  0XEE, 0XEE, 0XD0, 0X0D, 0XDE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XED, 0XDD, 0XFF,
  0XDC, 0XEE, 0XEE, 0XED, 0XDD, 0XDD, 0XEE, 0XE1,
  0XCC, 0XCC, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XE1,
  0XDD, 0XFF, 0XDE, 0XEE, 0XEE, 0XED, 0XD4, 0XEE,
  0XEE, 0XDD, 0XDD, 0XDD, 0XDD, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XED, 0XDF, 0XBE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XED, 0XD2, 0X00, 0X00, 0X2D, 0XDE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XDD, 0XBE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XED, 0XD2, 0X30, 0X00,
  0X00, 0XDE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XDD,
  0XBE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XED, 0XD0,
  0X30, 0X02, 0X3D, 0XBE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XDF, 0X6A, 0XEE, 0XEE, 0XED, 0XDD, 0XDE,
  0XEE, 0X5D, 0XDD, 0XDD, 0XDD, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XED, 0XDF, 0XD0, 0X5E, 0XEE, 0XED,
  0XDD, 0XDD, 0X0E, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XE4, 0XDD, 0XFF, 0XDB, 0XA1,
  0XEE, 0XEE, 0XD0, 0X2D, 0XDE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XED, 0XDF, 0XFF,
  0XFB, 0XCA, 0X9E, 0XEE, 0X9D, 0XD3, 0XD4, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XDD,
  0XDF, 0XFF, 0XFD, 0XBA, 0XAC, 0XEE, 0XED, 0XD0,
  0XD1, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0X8D, 0XFF, 0XFF, 0XDB, 0XCC, 0XCA,
  0XEE, 0X5D, 0XDE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XE4, 0XDF, 0XFF, 0XF6,
  0X6C, 0XCA, 0XCC, 0X1D, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XE0, 0XDF,
  0XFF, 0XFF, 0XDB, 0XBA, 0XCC, 0XAA, 0XAA, 0XAA,
  0XA5, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XED,
  0XDD, 0XFF, 0XFF, 0XFF, 0XFD, 0XDB, 0XBA, 0XC7,
  0X7C, 0XCC, 0XCC, 0XCA, 0XAA, 0XCE, 0XEE, 0XEE,
  0XED, 0XDD, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XDB, 0XBB, 0XBB, 0XBB, 0X4C, 0XCC, 0XCC, 0XCA,
  0XAA, 0XAA, 0XCA, 0XBD, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFD, 0XDD, 0XDB, 0XBB, 0XBB, 0XDC,
  0XAC, 0XCC, 0XCC, 0XAA, 0XCC, 0X2D, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFD, 0XDD, 0XBB, 0XB4, 0XAC, 0XCC, 0XCC, 0XAB,
  0XDF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XDD, 0XD6, 0XBB,
  0XBB, 0XBB, 0XBF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFD, 0XDD, 0XDD, 0XDD, 0XDF, 0XFF };

// /mnt/g/My Drive/bike_pov/frankenstein.gif -------------------------------

const uint8_t PROGMEM palette01[][3] = {
  {  13,   6,   6 },
  {  18,  31,   4 },
  {  18,   2,   1 },
  {  49,  31,  24 },
  {  18,  40,   6 },
  {   0,   0,   0 },
  {   3,   1,   1 },
  {   0,   0,   0 },
  {  24,   9,   6 },
  {  60,  60,  60 },
  {  31,   6,   4 },
  {   4,   6,   6 },
  {  24,  13,   9 },
  {  24,  49,   9 },
  {   0,   0,   0 },
  {   0,   0,   0 } };

const uint8_t PROGMEM pixels01[] = {
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFE,
  0XEE, 0XEE, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFE, 0XE6, 0XCC, 0XC0, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFE, 0XEE, 0XEE, 0XEE, 0XEF, 0XFF,
  0XFF, 0XFF, 0XFE, 0XDE, 0XEC, 0XC0, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFE, 0XBB, 0XBB, 0XBB,
  0XEF, 0XFF, 0XFF, 0XFF, 0XED, 0XDD, 0XEE, 0XC0,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFE, 0XBB,
  0XBB, 0XBB, 0XEF, 0XFF, 0XFF, 0XFF, 0XED, 0XEE,
  0XBC, 0XC0, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFE, 0XEE, 0XEE, 0XEE, 0XEF, 0XFF, 0XFF, 0XFE,
  0XEE, 0XEC, 0XCC, 0XC0, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XEE, 0X99, 0XEF, 0XFF, 0XFF,
  0XFF, 0XFE, 0XCC, 0XCC, 0XCC, 0XC0, 0XFF, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEF, 0XEE, 0XEE, 0XEF,
  0XFF, 0XFF, 0XFF, 0XE8, 0XCC, 0XCC, 0XCC, 0XC0,
  0XFE, 0XBB, 0XBE, 0XDD, 0XDD, 0XDD, 0XDD, 0XDD,
  0XDD, 0XEE, 0XEF, 0XFF, 0XFE, 0XEC, 0XCE, 0XCC,
  0XCC, 0XC0, 0XEB, 0XBB, 0XEE, 0XDD, 0XDD, 0XDE,
  0XDD, 0XDD, 0XDD, 0XDD, 0X1E, 0XEF, 0XFE, 0XCE,
  0XEE, 0XEC, 0XEE, 0XC0, 0XEB, 0XBE, 0XED, 0XDD,
  0XDD, 0XDE, 0XEE, 0XDD, 0XDD, 0XDD, 0XD1, 0XEE,
  0XEE, 0XCE, 0XAE, 0XEC, 0XEE, 0X60, 0XEB, 0XBB,
  0XEE, 0XDD, 0XDD, 0XDE, 0X99, 0XEE, 0XDD, 0XDD,
  0XDD, 0X1E, 0XEE, 0XEA, 0XAA, 0XAE, 0XAA, 0XEE,
  0XEB, 0XBB, 0XBE, 0XDD, 0XDD, 0XDE, 0X99, 0X99,
  0XED, 0XDD, 0XDD, 0XD1, 0XEA, 0XAA, 0XAA, 0XAA,
  0XAA, 0XA2, 0XEB, 0XBE, 0XED, 0XDD, 0XDD, 0XDE,
  0X99, 0X99, 0XED, 0XDD, 0XED, 0XDD, 0X1E, 0XEE,
  0XAA, 0XAA, 0XAA, 0XA2, 0XEB, 0XBE, 0XED, 0XDD,
  0XDD, 0XDE, 0X99, 0X99, 0XED, 0XDD, 0XED, 0XDD,
  0X1E, 0XEE, 0XEA, 0XAA, 0XAA, 0XA2, 0XEB, 0XBB,
  0XBE, 0XDD, 0XDD, 0XDE, 0X99, 0XEE, 0XDD, 0XDD,
  0XED, 0XDD, 0X1E, 0XED, 0XEE, 0XEE, 0XAA, 0XA2,
  0XEB, 0XBB, 0XEE, 0XDD, 0XDD, 0XDE, 0XEE, 0X5D,
  0XDD, 0XDD, 0XED, 0XED, 0X1E, 0XED, 0XDE, 0X33,
  0XEE, 0XEE, 0XEB, 0XBE, 0XED, 0XDD, 0XDD, 0XDE,
  0XDD, 0XDD, 0XDD, 0XDD, 0XED, 0XED, 0X1E, 0XED,
  0XDE, 0X33, 0X33, 0XEE, 0XEB, 0XBB, 0XEE, 0XDD,
  0XDD, 0XDE, 0XEE, 0XDD, 0XDD, 0XDD, 0XED, 0XED,
  0X1E, 0XED, 0XDE, 0X33, 0XEE, 0XEE, 0XEB, 0XBB,
  0XBE, 0XDD, 0XED, 0XDE, 0X99, 0XEE, 0XDD, 0XDD,
  0XED, 0XDD, 0X1E, 0XED, 0XEE, 0XEE, 0X6A, 0XA2,
  0XEB, 0XBE, 0XED, 0XDD, 0XEE, 0XDE, 0X99, 0X99,
  0XED, 0XDD, 0XED, 0XDD, 0X1E, 0XEE, 0XEA, 0XAA,
  0XAA, 0XA2, 0XEB, 0XBE, 0XED, 0XDD, 0XEE, 0XDE,
  0X99, 0X99, 0XED, 0XDD, 0XDD, 0XDD, 0X1E, 0XEE,
  0XAA, 0XAA, 0XAA, 0XA2, 0XEB, 0XBB, 0XBE, 0XDD,
  0XED, 0XDE, 0X99, 0X99, 0XED, 0XDD, 0XDD, 0XD1,
  0XEA, 0XAA, 0XAA, 0XAA, 0XAA, 0XA2, 0XEB, 0XBB,
  0XEE, 0XDD, 0XEE, 0XDE, 0X99, 0XEE, 0XDD, 0XDD,
  0XDD, 0X4E, 0XEE, 0XEA, 0XAA, 0XAE, 0XAA, 0XEE,
  0XEB, 0XBE, 0XED, 0XDD, 0XED, 0XDE, 0XEE, 0X5D,
  0XDD, 0XDD, 0XD1, 0XEE, 0XEE, 0XCE, 0XA7, 0XEC,
  0XEE, 0XE0, 0XEB, 0XBB, 0XEE, 0XDD, 0XED, 0XDE,
  0XDD, 0XDD, 0XDD, 0XDD, 0X4E, 0XEF, 0XFE, 0XCE,
  0XEE, 0XEC, 0XEE, 0XC0, 0XFE, 0XBB, 0XBE, 0XDD,
  0XDD, 0XDD, 0XDD, 0XDD, 0XDD, 0XEE, 0XEF, 0XFF,
  0XFE, 0XEC, 0XCE, 0XCC, 0XCC, 0XC0, 0XFF, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEF,
  0XFF, 0XFF, 0XFF, 0XFC, 0XCC, 0XCC, 0XCC, 0XC0,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XEE,
  0X99, 0XEF, 0XFF, 0XFF, 0XFF, 0XFE, 0XEE, 0XEC,
  0XCC, 0XC0, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFE, 0XEE, 0XEE, 0XEE, 0XEF, 0XFF, 0XFF, 0XFE,
  0XEE, 0XEC, 0XCC, 0XC0, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFE, 0XBB, 0XBB, 0XBB, 0XEF, 0XFF,
  0XFF, 0XFF, 0XED, 0XDE, 0XEC, 0XC0, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFE, 0XBB, 0XBB, 0XBB,
  0XEF, 0XFF, 0XFF, 0XFF, 0XED, 0XEE, 0XCC, 0XC0,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFE, 0XEE,
  0XEE, 0XEE, 0XEF, 0XFF, 0XFF, 0XFF, 0XEE, 0XEC,
  0XCC, 0XC0, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFE, 0XEC, 0XCC, 0XC0, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFE, 0XEE, 0XEE };

// /mnt/g/My Drive/bike_pov/pumpkin.gif ------------------------------------

const uint8_t PROGMEM palette02[][3] = {
  {   7,   3,   0 },
  {   0,   0,   0 },
  {  48,  14,   0 },
  {   0,   0,   0 } };

const uint8_t PROGMEM pixels02[] = {
  0X33, 0X33, 0X33, 0X33, 0X33, 0X33, 0X33, 0X11,
  0X11, 0X11, 0X11, 0X13, 0X33, 0X33, 0X33, 0X30,
  0X00, 0X00, 0X33, 0X33, 0X33, 0X33, 0X33, 0X31,
  0X11, 0X22, 0X22, 0X22, 0X22, 0X21, 0X11, 0X33,
  0X33, 0X30, 0X00, 0X00, 0X33, 0X33, 0X33, 0X33,
  0X33, 0X31, 0X11, 0X22, 0X22, 0X22, 0X22, 0X21,
  0X11, 0X33, 0X33, 0X30, 0X00, 0X00, 0X33, 0X33,
  0X33, 0X33, 0X31, 0X12, 0X22, 0X11, 0X11, 0X11,
  0X11, 0X22, 0X22, 0X13, 0X33, 0X30, 0X00, 0X00,
  0X33, 0X33, 0X33, 0X33, 0X12, 0X22, 0X11, 0X22,
  0X22, 0X22, 0X22, 0X21, 0X22, 0X21, 0X33, 0X30,
  0X00, 0X00, 0X33, 0X33, 0X33, 0X33, 0X12, 0X21,
  0X22, 0X22, 0X22, 0X22, 0X22, 0X22, 0X11, 0X21,
  0X33, 0X30, 0X00, 0X00, 0X33, 0X33, 0X33, 0X33,
  0X12, 0X21, 0X22, 0X22, 0X22, 0X22, 0X22, 0X22,
  0X11, 0X21, 0X33, 0X30, 0X00, 0X00, 0X33, 0X33,
  0X33, 0X31, 0X21, 0X12, 0X22, 0X22, 0X22, 0X22,
  0X22, 0X22, 0X22, 0X12, 0X11, 0X30, 0X00, 0X00,
  0X33, 0X33, 0X33, 0X31, 0X22, 0X22, 0X22, 0X21,
  0X12, 0X22, 0X11, 0X22, 0X22, 0X22, 0X11, 0X30,
  0X00, 0X00, 0X33, 0X33, 0X31, 0X12, 0X22, 0X22,
  0X22, 0X11, 0X12, 0X22, 0X11, 0X12, 0X22, 0X22,
  0X22, 0X10, 0X00, 0X00, 0X33, 0X33, 0X31, 0X12,
  0X22, 0X22, 0X22, 0X11, 0X12, 0X22, 0X11, 0X12,
  0X22, 0X22, 0X22, 0X10, 0X00, 0X00, 0X33, 0X33,
  0X31, 0X12, 0X22, 0X22, 0X11, 0X11, 0X12, 0X22,
  0X22, 0X12, 0X22, 0X22, 0X22, 0X10, 0X00, 0X00,
  0X33, 0X33, 0X31, 0X12, 0X21, 0X12, 0X22, 0X11,
  0X12, 0X22, 0X22, 0X21, 0X22, 0X22, 0X22, 0X10,
  0X00, 0X00, 0X33, 0X33, 0X31, 0X12, 0X21, 0X12,
  0X22, 0X11, 0X12, 0X22, 0X22, 0X21, 0X22, 0X22,
  0X22, 0X10, 0X00, 0X00, 0X33, 0X33, 0X31, 0X12,
  0X12, 0X22, 0X22, 0X21, 0X12, 0X22, 0X22, 0X21,
  0X22, 0X22, 0X22, 0X10, 0X00, 0X00, 0X33, 0X33,
  0X33, 0X31, 0X22, 0X22, 0X22, 0X22, 0X22, 0X22,
  0X22, 0X21, 0X11, 0X22, 0X22, 0X10, 0X00, 0X00,
  0X33, 0X31, 0X11, 0X11, 0X22, 0X22, 0X22, 0X22,
  0X22, 0X22, 0X22, 0X21, 0X11, 0X22, 0X22, 0X10,
  0X00, 0X00, 0X33, 0X31, 0X11, 0X11, 0X22, 0X22,
  0X22, 0X22, 0X22, 0X22, 0X22, 0X21, 0X11, 0X22,
  0X22, 0X10, 0X00, 0X00, 0X31, 0X10, 0X00, 0X00,
  0X12, 0X21, 0X11, 0X12, 0X22, 0X22, 0X22, 0X21,
  0X11, 0X22, 0X11, 0X30, 0X00, 0X00, 0X10, 0X00,
  0X11, 0X12, 0X22, 0X22, 0X22, 0X22, 0X22, 0X22,
  0X22, 0X21, 0X11, 0X22, 0X22, 0X10, 0X00, 0X00,
  0X10, 0X00, 0X11, 0X12, 0X22, 0X22, 0X22, 0X22,
  0X22, 0X22, 0X22, 0X21, 0X11, 0X22, 0X22, 0X10,
  0X00, 0X00, 0X10, 0X01, 0X33, 0X31, 0X22, 0X22,
  0X22, 0X22, 0X22, 0X22, 0X22, 0X21, 0X11, 0X22,
  0X22, 0X10, 0X00, 0X00, 0X31, 0X13, 0X31, 0X12,
  0X12, 0X22, 0X22, 0X21, 0X12, 0X22, 0X22, 0X21,
  0X22, 0X22, 0X22, 0X10, 0X00, 0X00, 0X33, 0X33,
  0X31, 0X12, 0X21, 0X12, 0X22, 0X21, 0X12, 0X22,
  0X22, 0X21, 0X22, 0X22, 0X22, 0X10, 0X00, 0X00,
  0X33, 0X33, 0X31, 0X12, 0X21, 0X12, 0X22, 0X11,
  0X12, 0X22, 0X22, 0X21, 0X22, 0X22, 0X22, 0X10,
  0X00, 0X00, 0X33, 0X33, 0X31, 0X12, 0X22, 0X22,
  0X11, 0X11, 0X12, 0X22, 0X22, 0X12, 0X22, 0X22,
  0X22, 0X10, 0X00, 0X00, 0X33, 0X33, 0X31, 0X12,
  0X22, 0X22, 0X22, 0X11, 0X12, 0X22, 0X11, 0X12,
  0X22, 0X22, 0X22, 0X10, 0X00, 0X00, 0X33, 0X33,
  0X31, 0X12, 0X22, 0X22, 0X22, 0X11, 0X12, 0X22,
  0X11, 0X12, 0X22, 0X22, 0X11, 0X30, 0X00, 0X00,
  0X33, 0X33, 0X33, 0X31, 0X22, 0X22, 0X22, 0X21,
  0X12, 0X22, 0X11, 0X22, 0X22, 0X22, 0X11, 0X30,
  0X00, 0X00, 0X33, 0X33, 0X33, 0X31, 0X21, 0X12,
  0X22, 0X22, 0X22, 0X22, 0X22, 0X22, 0X22, 0X12,
  0X11, 0X30, 0X00, 0X00, 0X33, 0X33, 0X33, 0X33,
  0X12, 0X21, 0X22, 0X22, 0X22, 0X22, 0X22, 0X22,
  0X11, 0X21, 0X33, 0X30, 0X00, 0X00, 0X33, 0X33,
  0X33, 0X33, 0X12, 0X21, 0X22, 0X22, 0X22, 0X22,
  0X22, 0X22, 0X11, 0X21, 0X33, 0X30, 0X00, 0X00,
  0X33, 0X33, 0X33, 0X33, 0X12, 0X22, 0X11, 0X22,
  0X22, 0X22, 0X22, 0X21, 0X22, 0X21, 0X33, 0X30,
  0X00, 0X00, 0X33, 0X33, 0X33, 0X33, 0X31, 0X12,
  0X22, 0X11, 0X11, 0X11, 0X12, 0X22, 0X22, 0X13,
  0X33, 0X30, 0X00, 0X00, 0X33, 0X33, 0X33, 0X33,
  0X33, 0X31, 0X11, 0X22, 0X22, 0X22, 0X22, 0X21,
  0X11, 0X33, 0X33, 0X30, 0X00, 0X00, 0X33, 0X33,
  0X33, 0X33, 0X33, 0X31, 0X11, 0X22, 0X22, 0X22,
  0X22, 0X21, 0X11, 0X33, 0X33, 0X30, 0X00, 0X00,
  0X33, 0X33, 0X33, 0X33, 0X33, 0X33, 0X33, 0X11,
  0X11, 0X11, 0X11, 0X13, 0X33, 0X33, 0X33, 0X30,
  0X00, 0X00 };

// /mnt/g/My Drive/bike_pov/skull.gif --------------------------------------

const uint8_t PROGMEM palette03[][3] = {
  {   1,   1,   0 },
  {  15,  20,  14 },
  {  20,  20,  15 },
  {   2,   2,   1 },
  {   3,   3,   3 },
  {   2,   3,   2 },
  {   5,   5,   5 },
  {   2,   2,   2 },
  {   8,   9,   7 },
  {  15,  15,  11 },
  {  11,  11,  11 },
  {  26,  26,  15 },
  {  26,  26,  20 },
  {  15,  15,  15 },
  {   0,   0,   0 },
  {   0,   0,   0 } };

const uint8_t PROGMEM pixels03[] = {
  0XFF, 0XFF, 0XFF, 0XFF, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XFF, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFE, 0XEE, 0XEE, 0XCC, 0X0E, 0XEE, 0XEE, 0XEE,
  0X7C, 0XCC, 0XCC, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XFF, 0XFF, 0XFE, 0XEE, 0XEE, 0XCC, 0X0E, 0XEE,
  0XEE, 0XEE, 0X7C, 0XCC, 0XCC, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XFF, 0XFF, 0XFE, 0XE0, 0X55, 0XCC,
  0X0E, 0XEE, 0XEE, 0XEE, 0X7C, 0XCC, 0XCC, 0X55,
  0X55, 0X55, 0X55, 0XEE, 0XFF, 0XEE, 0XEE, 0XE4,
  0XCC, 0XCC, 0X0E, 0XEE, 0XEE, 0XEE, 0X7C, 0XCC,
  0XCC, 0XCC, 0XCC, 0XCC, 0XCC, 0XEE, 0XFF, 0XEE,
  0XEE, 0XE4, 0XCC, 0XCC, 0X0E, 0XEE, 0XEE, 0XEE,
  0X7C, 0XCC, 0XCC, 0XCC, 0XCC, 0XCC, 0XCC, 0XEE,
  0XEE, 0XEE, 0X0C, 0XCC, 0XCC, 0XCC, 0X0E, 0XEE,
  0XEE, 0XEE, 0X7C, 0XCC, 0XCC, 0XCC, 0XCC, 0XCC,
  0XCC, 0XEE, 0XEE, 0XEE, 0XEC, 0XCC, 0XCC, 0XCC,
  0X0E, 0XEE, 0XEE, 0XEE, 0X7C, 0XCC, 0XCC, 0XCC,
  0XCC, 0XCC, 0XCC, 0XEE, 0XEE, 0X88, 0XAC, 0XCC,
  0XCC, 0XCC, 0X98, 0X88, 0X88, 0X88, 0X9C, 0XCC,
  0XCC, 0XCC, 0X83, 0X33, 0X33, 0XEE, 0XEE, 0XCC,
  0XCC, 0XCC, 0XCC, 0XCC, 0XCC, 0XCC, 0XBB, 0XCC,
  0XCC, 0XCC, 0XCC, 0XCC, 0X4E, 0XEE, 0XEE, 0XEE,
  0XEE, 0XCC, 0XCC, 0XCC, 0XCC, 0XCC, 0XCC, 0XCC,
  0XBB, 0XCC, 0XCC, 0XCC, 0XCC, 0XCC, 0X4E, 0XEE,
  0XEE, 0XEE, 0XEE, 0XCC, 0XCC, 0XCC, 0XCC, 0XCC,
  0XCC, 0XCB, 0XBB, 0X44, 0X44, 0X48, 0XCC, 0XCC,
  0X96, 0X66, 0X66, 0XEE, 0XEE, 0XCC, 0XCC, 0XCC,
  0XCC, 0XCC, 0XCB, 0XBB, 0XBB, 0XEE, 0XEE, 0XE0,
  0XBB, 0XCC, 0XCC, 0XCC, 0XCC, 0XEE, 0XEE, 0XCC,
  0XCC, 0XCC, 0XCC, 0XCC, 0XCB, 0XBB, 0XBB, 0XEE,
  0XEE, 0XE0, 0XBB, 0XCC, 0XCC, 0XCC, 0XCC, 0XEE,
  0XEE, 0XCC, 0XCC, 0XCC, 0XCC, 0XBB, 0XBB, 0XBB,
  0XBB, 0XEE, 0XEE, 0XE0, 0XBB, 0XCC, 0X4E, 0XEE,
  0XEE, 0XEE, 0XEE, 0XCC, 0XCC, 0XCC, 0XCC, 0XBB,
  0XBB, 0XBB, 0XBB, 0XEE, 0XEE, 0XE0, 0XBB, 0XCC,
  0X4E, 0XEE, 0XEE, 0XEE, 0XEE, 0XCC, 0XCC, 0XCC,
  0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB,
  0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XEE, 0XEE, 0XCC,
  0XCC, 0XCC, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB,
  0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XEE,
  0XEE, 0XCC, 0XCC, 0XCC, 0XBB, 0XBB, 0XBB, 0XBB,
  0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB,
  0XBB, 0XEE, 0XEE, 0XCC, 0XCC, 0XCC, 0XBB, 0XBB,
  0X99, 0X99, 0X99, 0X99, 0X1B, 0XBB, 0XBB, 0XBB,
  0X29, 0X99, 0X99, 0XEE, 0XEE, 0XCC, 0XCC, 0XCC,
  0XBB, 0XBB, 0X0E, 0XEE, 0XEE, 0XEE, 0X3B, 0XBB,
  0XBB, 0XBB, 0X4E, 0XEE, 0XEE, 0XEE, 0XEE, 0XCC,
  0XCC, 0XCC, 0XBB, 0XBB, 0X0E, 0XEE, 0XEE, 0XEE,
  0X3B, 0XBB, 0XBB, 0XBB, 0X4E, 0XEE, 0XEE, 0XEE,
  0XEE, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0X0E, 0XEE,
  0XEE, 0XEE, 0X3B, 0XBB, 0XBB, 0XBB, 0XBB, 0XB2,
  0XDD, 0XEE, 0XEE, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB,
  0X0E, 0XEE, 0XEE, 0XEE, 0X3B, 0XBB, 0XBB, 0XBB,
  0XBB, 0XB2, 0XDD, 0XEE, 0XEE, 0X11, 0X2B, 0XBB,
  0XBB, 0XBB, 0X0E, 0XEE, 0XEE, 0XEE, 0X3B, 0XBB,
  0X11, 0X11, 0X11, 0X1D, 0XDD, 0XEE, 0XEE, 0XDD,
  0X2B, 0XBB, 0XBB, 0XBB, 0X0E, 0XEE, 0XEE, 0XEE,
  0X3B, 0XBB, 0XDD, 0XDD, 0XDD, 0XDD, 0XDD, 0XEE,
  0XEE, 0XDD, 0X2B, 0XBB, 0XBB, 0XBB, 0X0E, 0XEE,
  0XEE, 0XEE, 0X3B, 0XB1, 0XDD, 0XDD, 0XDD, 0XDD,
  0XDD, 0XEE, 0XEE, 0XAA, 0X92, 0X22, 0XBB, 0XBB,
  0X99, 0X99, 0X99, 0X99, 0X92, 0X2D, 0XAA, 0X00,
  0X00, 0X00, 0X00, 0XEE, 0XEE, 0XAA, 0XAD, 0XD2,
  0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0X2D, 0XD9,
  0XAA, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XAA,
  0XAD, 0XD2, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB, 0XBB,
  0X2D, 0XD9, 0XAA, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0X0A, 0XA9, 0XDD, 0XDD, 0XBB, 0XBB,
  0XBB, 0XDD, 0X9A, 0XA6, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEA, 0XA9, 0XDD, 0XDD,
  0XBB, 0XBB, 0XBB, 0XDD, 0X9A, 0XA6, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XFF, 0XEE, 0XEE, 0XE7,
  0XAA, 0XAA, 0XAA, 0XAA, 0XAA, 0XAA, 0XAA, 0XA6,
  0XEE, 0XEE, 0XEE, 0XEF, 0XFF, 0XFF, 0XFF, 0XEE,
  0XEE, 0XE7, 0XAA, 0XAA, 0XAA, 0XAA, 0XAA, 0XAA,
  0XAA, 0XA6, 0XEE, 0XEE, 0XEE, 0XEF, 0XFF, 0XFF,
  0XFF, 0XEE, 0XEE, 0XE7, 0XAA, 0XAA, 0XAA, 0XAA,
  0XAA, 0XAA, 0XAA, 0XA6, 0XEE, 0XEE, 0XEE, 0XEF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XFF,
  0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF,
  0XFE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE, 0XEE,
  0XEE, 0XEE, 0XEE, 0XFF, 0XFF, 0XFF, 0XFF, 0XFF };

typedef struct {
  uint8_t        type;    // PALETTE[1,4,8] or TRUECOLOR
  line_t         lines;   // Length of image (in scanlines)
  const uint8_t *palette; // -> PROGMEM color table (NULL if truecolor)
  const uint8_t *pixels;  // -> Pixel data in PROGMEM
} image;

const image PROGMEM images[] = {
  { PALETTE4 ,   31, (const uint8_t *)palette00, pixels00 },
  { PALETTE4 ,   35, (const uint8_t *)palette01, pixels01 },
  { PALETTE4 ,   37, (const uint8_t *)palette02, pixels02 },
  { PALETTE4 ,   40, (const uint8_t *)palette03, pixels03 }
};

#define NUM_IMAGES (sizeof(images) / sizeof(images[0]))
